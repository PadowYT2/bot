"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cacheGuilds=void 0;const mongoose_1=require("mongoose"),time_1=require("../constants/time"),dbCache=new Map,dbSaveQueue=new Map,guildObject={guildid:"",voices:{},mutes:{},bans:{},channel:"",count:0,user:"",modules:[],flows:{},message:"",users:{},liveboard:{},log:{},brcs:{},brms:{},brs:{}},guildSchema=new mongoose_1.Schema(guildObject,{minimize:!0}),Guild=(0,mongoose_1.model)("Guild",guildSchema),get=e=>new Promise(((t,a)=>Guild.findOne({guildid:e},((d,s)=>d?a(d):(s||((s=new Guild(guildObject)).guildid=e),t(s)))))),load=async e=>{const t=await get(e),a={},d=guildObject;for(const e in d)a[e]=t[e]||d[e];return dbCache.set(e,a)},save=async(e,t)=>{if(!dbSaveQueue.has(e)){dbSaveQueue.set(e,t);const a=await get(e),d=dbCache.get(e),s=dbSaveQueue.get(e);for(const e of s)a[e]=d[e];return a.save().then((()=>{let t=dbSaveQueue.get(e);t.length>s.length?(dbSaveQueue.delete(e),save(e,t.filter((e=>!s.includes(e))))):dbSaveQueue.delete(e)})).catch(console.log)}dbSaveQueue.get(e).push(...t)};async function cacheGuilds(e){let t=await Guild.find({$or:[...e].map((e=>({guildid:e})))});return await Promise.all([...e].map((async e=>{const a=t.find((t=>t.guildid==e))||{guildid:e},d={},s=guildObject;for(const e in s)d[e]=a[e]||s[e];return dbCache.set(e,d)})))}exports.default=()=>async e=>(dbCache.has(e)||await load(e),{reload:()=>load(e),unload:()=>dbCache.delete(e),get:()=>Object.assign({},dbCache.get(e)),set:(t,a)=>(dbCache.get(e)[t]=a,save(e,[t]),dbCache.get(e)),setMultiple:t=>{let a=dbCache.get(e);return Object.assign(a,t),save(e,Object.keys(t)),dbCache.get(e)},addToArray:(t,a)=>(dbCache.get(e)[t].push(a),save(e,[t]),dbCache.get(e)),removeFromArray:(t,a)=>(dbCache.get(e)[t]=dbCache.get(e)[t].filter((e=>e!==a)),save(e,[t]),dbCache.get(e)),setOnObject:(t,a,d)=>(dbCache.get(e)[t][a]=d,save(e,[t]),dbCache.get(e)),removeFromObject:(t,a)=>(delete dbCache.get(e)[t][a],save(e,[t]),dbCache.get(e)),reset:()=>{let t=dbCache.get(e);return Object.assign(t,guildObject),t.guildid=e,save(e,Object.keys(guildObject)),dbCache.get(e)},addToCount:t=>{let a=dbCache.get(e);a.count++,a.user=t.id,a.users[t.id]||(a.users[t.id]=0),a.users[t.id]++;let d=(0,time_1.getDateFormatted)(new Date);if(!a.log[d])for(a.log[d]=0;Object.keys(a.log).length>7;)delete a.log[Object.keys(a.log)[0]];return a.log[d]+=1,save(e,["count","user","users","log","message"]),dbCache.get(e)}}),exports.cacheGuilds=cacheGuilds;