"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.flow=void 0;const propertyTypes_1=require("./propertyTypes");exports.flow={triggers:{each:{short:"Каждое Х число",long:"Когда кто-то считает умножение числа Х. Например, если Х - 10, будет срабатывать на 10, 20, 30 и т.д.",properties:[propertyTypes_1.propertyTypes.numberX],explanation:"Когда кто-то считает умножение {0}",check:({count:e},[t])=>e%t==0},only:{short:"Только число X",long:"Сработает только когда пользователь просчитает число Х.",properties:[propertyTypes_1.propertyTypes.numberX],explanation:"Когда кто-то считает число {0}",check:({count:e},[t])=>e==t},score:{short:"Результат X",long:"Сработает как только у кого-либо будет результат Х.",properties:[propertyTypes_1.propertyTypes.numberX],explanation:"Когда кто-нибудь получит результат {0}",check:({score:e},[t])=>e==t},countfail:{short:"Ошибка счёта",long:"Сработает когда кто-то сделает ошибку в счёту.",explanation:"Когда кто-нибудь посчитает неправильное число",check:()=>{}}},actions:{pin:{short:"Закрепить сообщение",explanation:"Закрепит сообщение.",run:async({countingMessage:e})=>await e.pin().catch((async()=>{let t=await e.channel.messages.fetchPinned(!1).catch((()=>({size:0})));50==t.size&&await t.last().unpin().then((()=>e.pin().catch((()=>null)))).catch((()=>null))}))},lock:{short:"Заблокировать канал счёта",long:"Это сделает канал счёта доступным только для читания.",explanation:"Заблокировать канал счёта",run:async({message:{channel:e,guild:t}})=>await e.updateOverwrite(t.roles.everyone,{SEND_MESSAGES:!1}).catch((()=>null))},reset:{short:"Сбросить текущий счёт",explanation:"Сбросить счёт до 0",run:({gdb:e})=>e.set("count",0)}}};for(const e in exports.flow.triggers)exports.flow.triggers[e]=Object.assign({short:"N/A",long:null,properties:[],explanation:"N/A",check:e=>e},exports.flow.triggers[e]);for(const e in exports.flow.actions)exports.flow.actions[e]=Object.assign({short:"N/A",long:null,properties:[],explanation:"N/A",run:()=>null},exports.flow.actions[e]);