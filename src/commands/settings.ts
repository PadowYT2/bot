import { SlashCommandBuilder } from "discord.js";

export const options = new SlashCommandBuilder()
    .setName("settings")
    .setDescription("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
    .setDefaultMemberPermissions(8)
    .setDMPermission(false)
    .addSubcommand((c) => c.setName("get").setDescription("–ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞."))
    .addSubcommand((c) => c.setName("toggle").setDescription("–ò–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–π—Å—Ç—Ä–æ–π–∫–∏.").addStringOption((o) =>
        o.setName("setting").setDescription("–ù–∞—Å—Ç—Ä–æ–π–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –∏–∑–º–µ–Ω–∏—Ç—å.").setRequired(true)
            .setChoices({
                name: "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ (/purge).", value: "purgePinned"
            }, {
                name: "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã.", value: "voices"
            })
    ))
    .addSubcommand((c) => c.setName("setlobby").setDescription("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–±–±–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.").addChannelOption((o) =>
        o.setName("channel").setDescription("–ö–∞–Ω–∞–ª-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –∑–∞–π—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.").setRequired(true).addChannelTypes(2)
    ))
    .addSubcommand((c) => c.setName("counting").setDescription("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è —Å—á—ë—Ç–∞.").addChannelOption((o) =>
        o.setName("channel").setDescription("–¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç —Å—á–∏—Ç–∞—Ç—å —Ü–∏—Ñ–µ—Ä–∫–∏.").setRequired(true).addChannelTypes(0)
    ))
    .toJSON();

import { ChatInputCommandInteraction } from "discord.js";
import Util from "../util/Util";

export const run = async (interaction: ChatInputCommandInteraction) => {
    const cmd = interaction.options.getSubcommand();
    const gset = await Util.database.settings(interaction.guild.id);
    const gdb = await Util.database.guild(interaction.guild.id);

    if (cmd === "get") {
        return interaction.reply({
            embeds: [{
                title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ " + interaction.guild.name,
                fields: [{
                    name: "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π",
                    value: gset.get().purgePinned ?
                        "üü¢ **`–í–∫–ª—é—á–µ–Ω–æ`**" :
                        "üî¥ **`–í—ã–∫–ª—é—á–µ–Ω–æ`**",
                    inline: true
                }, {
                    name: "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã",
                    value: gset.get().voices.enabled ?
                        "üü¢ **`–í–∫–ª—é—á–µ–Ω—ã`**" :
                        "üî¥ **`–í—ã–∫–ª—é—á–µ–Ω—ã`**",
                    inline: true
                }, {
                    name: "–õ–æ–±–±–∏-–∫–∞–Ω–∞–ª",
                    value: gset.get().voices.lobby ?
                        `<#${gset.get().voices.lobby}>` :
                        "**`–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`**",
                    inline: true
                }]
            }]
        });
    } else if (cmd === "toggle") {
        const type = interaction.options.getString("setting");
        let idk = "";

        if (type === "purgePinned") {
            gset.get().purgePinned ? (() => {
                gset.set("purgePinned", false);
                idk = "**`–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π`** –±—ã–ª–æ –≤—ã–∫–ª—é—á–µ–Ω–æ.";
            })() : (() => {
                gset.set("purgePinned", true);
                idk = "**`–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π`** –±—ã–ª–æ –≤–∫–ª—é—á–µ–Ω–æ.";
            })();
        } else if (type === "voices") {
            gset.get().voices.enabled ? (() => {
                gset.setOnObject("voices", "enabled", false);
                idk = "**`–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã`** –±—ã–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω—ã.";
            })() : (() => {
                gset.setOnObject("voices", "enabled", true);
                idk = "**`–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã`** –±—ã–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã.";
            })();
        };
        return interaction.reply(idk);
    } else if (cmd === "setlobby") {
        const lobby = interaction.options.getChannel("channel");
        gset.setOnObject("voices", "lobby", lobby.id);
        return interaction.reply(`‚úÖ –õ–æ–±–±–∏ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. (${lobby})`);
    } else if (cmd === "counting") {
        const channel = interaction.options.getChannel("channel");
        gdb.setMultiple({
            channel: channel.id,
            count: 0,
            user: "",
            message: interaction.id
        });
        return interaction.reply(`‚úÖ –ö–∞–Ω–∞–ª —Å—á—ë—Ç–∞ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. (${channel})`);
    };
};